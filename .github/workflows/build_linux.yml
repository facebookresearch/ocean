# This workflow builds and tests Ocean on Linux (release, static)
# Based on : https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build Ocean on Linux (static)

on:
  pull_request:
    branches: [main]
  schedule:
    # Execute this workflow:
    # Mon-Sun, every 24 hours at 6 am (UTC)
    - cron: '0 6 * * *'
  # Have the ability to trigger this job manually through the API
  workflow_dispatch:

env:
  OCEAN_LINK_TYPE: static

  OCEAN_THIRDPARTY_BUILD_PATH: ${{ github.workspace }}/ocean_thirdparty_build
  OCEAN_THIRDPARTY_INSTALL_PATH: ${{ github.workspace }}/ocean_thirdparty_install

  OCEAN_BUILD_PATH: ${{ github.workspace }}/ocean_build
  OCEAN_INSTALL_PATH: ${{ github.workspace }}/ocean_install

jobs:
  build:
    name: Linux (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [debug, release]

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y -o Acquire::Retries=5 \
            git ninja-build zip libx11-dev libgtk-3-dev \
            liblzma-dev libgl1-mesa-dev libxcb-glx0-dev \
            libdeflate-dev libudev-dev zlib1g-dev

      # - name: Install a newer CMake
      #   run: |
      #     sudo apt purge --auto-remove cmake
      #     wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
      #     sudo apt-add-repository -y 'deb https://apt.kitware.com/ubuntu/ jammy main'
      #     sudo apt update
      #     sudo apt install -y cmake

      - name: Build and install third-party libraries for Ocean
        run: |
          ${{ github.workspace }}/build/cmake/build_thirdparty_linuxunix.sh \
            -i ${{ env.OCEAN_THIRDPARTY_INSTALL_PATH }} \
            -b ${{ env.OCEAN_THIRDPARTY_BUILD_PATH }} \
            -c ${{ matrix.build_config }} \
            -l ${{ env.OCEAN_LINK_TYPE }}

      - name: Build and install Ocean
        run: |
          ${{ github.workspace }}/build/cmake/build_ocean_linuxunix.sh \
            -i ${{ env.OCEAN_INSTALL_PATH }} \
            -b ${{ env.OCEAN_BUILD_PATH }} \
            -c ${{ matrix.build_config }} \
            -l ${{ env.OCEAN_LINK_TYPE }} \
            -t ${{ env.OCEAN_THIRDPARTY_INSTALL_PATH }}

      - name: Archive build artifacts
        if: success() && matrix.build_config == 'release'
        run: |
          tar -cvf ocean-build.tar ${{ env.OCEAN_BUILD_PATH }}/static_Release

      - name: Upload build archive
        if: success() && matrix.build_config == 'release'
        uses: actions/upload-artifact@v3
        with:
          name: ocean-build
          path: ./ocean-build.tar

  testbase:
    name: Run tests in testbase directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testbase
          # Exclude tests that are known to fail
          ctest-args: '-E TestHighPerformanceTimer|TestSignal'

  testcv:
    name: Run tests in testcv directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testcv
          # Too many to do in sequence, but running in parallel causes intermittent errors, so allow up to one failure per test
          ctest-args: '-j 16 --repeat until-pass:2'

  testdevices:
    name: Run tests in testdevices directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testdevices

  testgeometry:
    name: Run tests in testgeometry directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testgeometry

  testio:
    name: Run tests in testio directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testio
          # Exclude tests that are known to fail
          ctest-args: '-E TestBasemap'

  testmath:
    name: Run tests in testmath directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testmath
          ctest-args: '-E TestEquation.CubicEquation'

  testmedia:
    name: Run tests in testmedia directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testmedia

  testnetwork:
    name: Run tests in testnetwork directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testnetwork

  testtracking:
    name: Run tests in testtracking directory
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-path: ${{ env.OCEAN_BUILD_PATH }}/static_Release
          install-path: ${{ env.OCEAN_INSTALL_PATH }}/static_Release
          test-directory: impl/ocean/test/testtracking
